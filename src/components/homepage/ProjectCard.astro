---
interface Props {
  project: {
    name: string
    url: string
    logo?: string
    banner?: string
    description: string
    buttonLabel?: string
  }
  class?: string
}

const { project } = Astro.props

function trimText(string: string, length: number) {
  return string
}
---

<script>
  const cards = Array.from(
    document.querySelectorAll("[data-card]"),
  ) as HTMLDivElement[]

  for (const card of cards) {
    const video = card.querySelector("video")
    if (!video) continue

    card.addEventListener("mouseenter", () => video.play().catch(console.error))
    card.addEventListener("mouseleave", () => video.pause())
  }
</script>

<div
  class="relative flex size-full h-[26rem] items-stretch bg-black @container"
  data-card
  class={Astro.props.class}
>
  {
    // Left side content
  }
  <div
    class="flex min-w-0 shrink grow-[5] flex-col justify-end @4xl:min-w-20 sm:p-8 lg:p-8"
  >
    {
      // Logo
    }
    <div
      class:list={[
        "relative mb-4 ",
        !project.banner &&
          "flex h-full w-full grow items-center  justify-center max-2xl:@2xl:mx-0 max-2xl:@2xl:block max-2xl:@2xl:h-auto  max-2xl:@2xl:grow-0",
      ]}
    >
      {
        project.logo && (
          <div
            class:list={[
              "logo relative mb-1 shadow-black   ",
              project.banner ? "size-32 max-2xl:@2xl:after:hidden" : "size-44",
            ]}
          >
            <img
              class="size-full"
              src={project.logo}
              alt={"Logo of " + project.name}
            />
          </div>
        )
      }
    </div>

    {
      // Texts
    }
    <div class="flex flex-col gap-4">
      <h2
        class="min-w-[8ch] max-w-full text-pretty text-4xl font-bold text-white [overflow-wrap:break-word] md:text-6xl lg:text-7xl"
      >
        {project.name}
      </h2>

      <p class="max-w-[60ch] text-pretty font-medium text-slate-300">
        {trimText(project.description, 100)}
      </p>

      <slot name="button"
        ><span class="text-8xl text-red-400">No button set!!!!!!!</span></slot
      >
    </div>
  </div>

  <!-- Banner -->
  {
    project.banner && (
      <div class="banner-container">
        {project.banner.split(".").at(-1) === "mp4" ?
          <video
            src={project.banner}
            class=" z-50 size-full object-cover transition-transform duration-700 group-hover:scale-[1.01]"
            playsinline
            muted
            loop
          />
        : <img
            src={project.banner}
            class=" size-full object-cover transition-transform duration-700 group-hover:scale-[1.01]"
            alt=""
          />
        }
      </div>
    )
  }
</div>

<style lang="postcss">
	._drop-shadow {
		filter: drop-shadow(0px 16px 24px black);
	}

	.logo {
		&::after {
			content: ' ';
			position: absolute;
			left: 0%;
			bottom: -2rem;
			background-image: var(--background);
			background-repeat: no-repeat;
			background-size: cover;
			height: 150%;
			width: 120%;
			translate: -12% 15%;
			z-index: -1;
			opacity: 80%;
			/* filter: brightness(2); */
			mask-image: radial-gradient(closest-side, black 0%, transparent 99%);
		}
	}

	.banner-container {
		position: absolute;
		left: 0;
		right: 0;
		height: 70%;
		z-index: -20;
		margin: 2px;
		mask-image: linear-gradient(to top, transparent, black 70%);
		@apply overflow-hidden rounded-3xl;

		@container (min-width: theme(screens.md)) {
			position: relative;
			min-height: 100%;
			height: 100%;
			flex-grow: 1;
			max-height: none;
			clip-path: polygon(0 0, 100% 0, 100% 100%, 4rem 100%);
			@apply rounded-l-none rounded-r-3xl;
			flex-shrink: 9999;
		}
	}

	.letter-logo {
		text-shadow: 0 8px 24px theme(colors.deepPink / 60%);
	}
</style>
