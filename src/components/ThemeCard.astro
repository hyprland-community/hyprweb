---
import type { ProcessedTheme } from "#api/themes.json"
import { extractAuthorFromRepoUrl } from "#lib/helper"
import { D } from "@mobily/ts-belt"

// Card element to display a Hyprtheme theme

type Props = { theme: ProcessedTheme }

const { name, repo, colors, images, desc } = Astro.props.theme

const author = extractAuthorFromRepoUrl(repo)
---

<li class="transition-transform hover:-translate-y-1">
  <a href={"/hyprtheme/" + name} class="group flex flex-col gap-4">
    <div
      class="image-wrapper overflow-hidden border-solid sm:rounded-3xl sm:border-2"
    >
      <img
        class="aspect-video w-full object-cover object-center transition-transform group-hover:scale-[1.01]"
        src={images[0]}
      />
    </div>

    <div
      class="ml-4 flex flex-col gap-1 transition-colors group-hover:text-[var(--LightVibrant)] md:ml-0"
    >
      <h2 class="text-xl font-bold">
        {name}
      </h2>
      <p class="font-medium opacity-80">By {author}</p>
    </div>
  </a>
</li>

<style define:vars={D.map(colors, (value) => value.hex)}>
  .image-wrapper {
    transition: all 140ms;
    box-shadow: 0px 8px 40px color-mix(in srgb, var(--Vibrant) 30%, transparent);

    border-color: var(--Vibrant);

    .group:hover & {
      box-shadow: 0px 8px 40px
        color-mix(in srgb, var(--LightVibrant) 30%, transparent);
      border-color: var(--LightVibrant);
    }
  }
</style>

<!-- <div class="flex p-2 gap-2">
    {
      Object.entries(colors).map(([colorName, { hex, population }]) => (
        <div class="flex flex-col gap-1">
          <p class="text-sm opacity-80">{colorName}</p>
          <div class="w-20 h-20 rounded-sm" style={"background-color:" + hex} />
          <p class="text-xs opacity-80">{population}</p>
        </div>
      ))
    }
  </div> -->
